version: "3.8"

services:
  nginx:
    container_name: rishort_nginx
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    container_name: rishort_backend_${NODE_ID:-1}
    build:
      context: ./back
      dockerfile: Dockerfile.prod
    expose:
      - "8000"
    env_file:
      - ./back/.env.prod
    networks:
      - app-network
    depends_on:
      - redis
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "0.50"
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    container_name: rishort_frontend
    build:
      context: ./front
      dockerfile: Dockerfile.prod
    expose:
      - "3000"
    env_file:
      - ./front/.env.prod
    networks:
      - app-network
    depends_on:
      - backend

  redis:
    container_name: rishort_redis
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    expose:
      - "6379"
    networks:
      - app-network
    volumes:
      - redis-data:/data
    env_file:
      - ./back/.env.prod
    deploy:
      resources:
        limits:
          cpus: "0.30"
          memory: 512M
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  certbot:
    container_name: rishort_certbot
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - nginx

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
